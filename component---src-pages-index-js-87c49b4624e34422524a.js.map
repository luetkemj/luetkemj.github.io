{"version":3,"sources":["webpack:///./src/components/list-item/list-item.component.js","webpack:///./src/pages/index.js","webpack:///./src/components/seo.js"],"names":["ListItem","_ref","className","date","path","title","classes","linkToRender","external","react_default","a","createElement","gatsby_plugin_google_analytics","href","gatsby_browser_entry","to","key","propTypes","PropTypes","string","defaultProps","__webpack_require__","d","__webpack_exports__","pageQuery","IndexPage","_ref$data","data","edges","allMarkdownRemark","site","siteMetadata","posts","filter","post","node","frontmatter","layout","categories","_","chain","map","p","uniq","value","postsByCategory","category","seo","index","Fragment","fields","titleTemplate","siteTitle","SEO","description","lang","meta","keywords","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_4__","query","detailsQuery","render","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","link","rel","name","content","property","author","concat","length","join","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","array","arrayOf","isRequired"],"mappings":"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","file":"component---src-pages-index-js-87c49b4624e34422524a.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Link } from 'gatsby'\nimport { OutboundLink } from 'gatsby-plugin-google-analytics'\n\nimport './list-item.component.scss'\n\nexport default function ListItem({ className, date, path, title, external }) {\n  const classes = date\n    ? `list-item list-item--with-date ${className}`\n    : `list-item ${className}`\n  const linkToRender = external ? (\n    <OutboundLink className=\"list-item__link\" href={path}>\n      {title}\n    </OutboundLink>\n  ) : (\n    <Link className=\"list-item__link\" to={path}>\n      {title}\n    </Link>\n  )\n\n  return (\n    <li key={`${date}-${title}`} className={classes}>\n      {date && <span className=\"list-item__date extrnal\">{date}</span>}\n      {linkToRender}\n    </li>\n  )\n}\n\nListItem.propTypes = {\n  className: PropTypes.string,\n}\n\nListItem.defaultProps = {\n  className: '',\n}\n","import React from 'react'\nimport SEO from '../components/seo'\nimport ListItem from '../components/list-item/list-item.component'\nimport _ from 'lodash'\n\nimport './index.scss'\n\nconst IndexPage = ({\n  data: {\n    allMarkdownRemark: { edges },\n    site: {\n      siteMetadata: { title },\n    },\n  },\n}) => {\n  const posts = edges.filter(post => post.node.frontmatter.layout === 'post')\n  const categories = _.chain(posts)\n    .map(p => p.node.frontmatter.categories)\n    .uniq()\n    .value()\n  const postsByCategory = _.chain(categories)\n    .map(category =>\n      _.filter(posts, post => post.node.frontmatter.categories === category)\n    )\n    .value()\n\n  return (\n    <div className=\"index\">\n      <SEO title={`${title}`} />\n      <section>\n        {postsByCategory.map((category, index) => (\n          <>\n            <h2 className=\"index__header\">{categories[index]}</h2>\n            <ul className=\"index__post-list\">\n              {category.map(post => (\n                <ListItem\n                  key={post.node.fields.path}\n                  date={post.node.frontmatter.date}\n                  path={post.node.fields.path}\n                  title={post.node.frontmatter.title}\n                />\n              ))}\n            </ul>\n          </>\n        ))}\n      </section>\n\n      <section>\n        <h2 className=\"index__header\">Comics</h2>\n        <ul className=\"index__post-list\">\n          <ListItem\n            external\n            path=\"http://www.webtoons.com/en/challenge/mallow-chalie/list?title_no=3458\"\n            title=\"Mallow Chalie\"\n          />\n          <ListItem path=\"/comics/strong-man\" title=\"Strong Man\" />\n          <ListItem\n            external\n            path=\"http://www.makingcomics.com/2014/01/18/get-started-already\"\n            title=\"Get Started Already!\"\n          />\n          <ListItem path=\"/comics/inner-dialogue\" title=\"Inner Dialogue\" />\n          <ListItem\n            path=\"/comics/inner-dialogue-outtakes\"\n            title=\"Inner Dialogue Outtakes\"\n          />\n          <ListItem\n            external\n            path=\"http://www.makingcomics.com/2014/01/01/taste-vs-ability\"\n            title=\"Taste VS Ability\"\n          />\n          {/* <!-- 2816 monument -->\n          <!-- experimental sequential 2 --> */}\n          <ListItem path=\"/comics/robert\" title=\"Robert\" />\n          <ListItem\n            external\n            path=\"http://www.topshelfcomix.com/ts2.0/baby_dragons_ch1/\"\n            title=\"Baby Dragons Are No Fun - Part 1\"\n          />\n          <ListItem\n            external\n            path=\"http://www.topshelfcomix.com/ts2.0/baby_dragons_ch2/\"\n            title=\"Baby Dragons Are No Fun - Part 2\"\n          />\n          <ListItem\n            path=\"/comics/rip-smokey-the-cat\"\n            title=\"RIP Smokey the Cat\"\n          />\n          <ListItem\n            path=\"/comics/are-you-awake-bunny-rabbit\"\n            title=\"Are You Awake Bunny Rabbit?\"\n          />\n          <ListItem path=\"/comics/fiesta\" title=\"Fiesta\" />\n        </ul>\n      </section>\n    </div>\n  )\n}\n\nexport default IndexPage\n\nexport const pageQuery = graphql`\n  query IndexQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n    allMarkdownRemark(sort: { order: DESC, fields: [frontmatter___date] }) {\n      edges {\n        node {\n          fields {\n            path\n          }\n          frontmatter {\n            layout\n            title\n            date(formatString: \"YYMMDD\")\n            categories\n          }\n        }\n      }\n    }\n  }\n`\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\nconst titleTemplate = (title, siteTitle) => {\n  if (title === siteTitle) {\n    return title\n  }\n\n  return `%s Â· ${siteTitle}`\n}\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaDescription =\n          description || data.site.siteMetadata.description\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang,\n            }}\n            link={[\n              {\n                rel: 'stylesheet',\n                href:\n                  'https://fonts.googleapis.com/css?family=Karla:400,400i,700,700i',\n              },\n              {\n                rel: 'stylesheet',\n                href: 'https://fonts.googleapis.com/css?family=Inconsolata',\n              },\n            ]}\n            title={title}\n            titleTemplate={titleTemplate(title, data.site.siteMetadata.title)}\n            meta={[\n              {\n                name: `description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:title`,\n                content: title,\n              },\n              {\n                property: `og:description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:type`,\n                content: `website`,\n              },\n              {\n                name: `twitter:card`,\n                content: `summary`,\n              },\n              {\n                name: `twitter:creator`,\n                content: data.site.siteMetadata.author,\n              },\n              {\n                name: `twitter:title`,\n                content: title,\n              },\n              {\n                name: `twitter:description`,\n                content: metaDescription,\n              },\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                      name: `keywords`,\n                      content: keywords.join(`, `),\n                    }\n                  : []\n              )\n              .concat(meta)}\n          />\n        )\n      }}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`\n"],"sourceRoot":""}