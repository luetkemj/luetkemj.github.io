{"version":3,"sources":["webpack:///./src/components/progress-chart/progress-chart.component.js","webpack:///./src/components/cal-chart/cal-chart.component.js","webpack:///./src/pages/goals-2019.js","webpack:///./src/components/seo.js","webpack:///./src/components/list-item/list-item.component.js","webpack:///./node_modules/classNames/index.js"],"names":["Progress","_ref","data","goal","react_default","a","createElement","className","map","d","row","split","key","style","width","class","propTypes","PropTypes","string","isRequired","number","defaultProps","Runs","console","log","_ref2","month","days","week","indexWeek","day","indexDay","classnames","calchart__day--no","calchart__day--yes","calchart__day--null","arrayOf","shape","__webpack_require__","__webpack_exports__","pageQuery","Goals2019Page","Fragment","seo","title","maxWidth","margin","allJsonJson","edges","node","totalMilage","runs","xtrain","marginLeft","list_item_component","path","sober","titleTemplate","siteTitle","SEO","description","lang","meta","keywords","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_4__","query","detailsQuery","render","metaDescription","site","siteMetadata","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","link","rel","href","name","content","property","author","concat","length","join","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","array","ListItem","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_2__","gatsby_plugin_google_analytics__WEBPACK_IMPORTED_MODULE_3__","date","classes","linkToRender","external","to","__WEBPACK_AMD_DEFINE_RESULT__","hasOwn","hasOwnProperty","classNames","i","arguments","arg","argType","push","Array","isArray","inner","apply","call","module","exports","default","undefined"],"mappings":"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","file":"component---src-pages-goals-2019-js-1ced18cb63747dfc805b.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport './progress-chart.component.scss'\n\nexport default function Progress({ data, goal }) {\n  return (\n    <div className=\"rows\">\n      {data.map(d => {\n        const row = d.split(' ')\n        return (\n          <div className=\"rows__row\" key={d}>\n            <div className=\"rows__label\">{row[0]}</div>\n            <div className=\"rows__bar\">\n              <div\n                className=\"rows__progress\"\n                style={{ width: `${(row[1] / goal) * 100}%` }}\n              />\n            </div>\n            <div className=\"rows__total\">\n              {row[1]}{' '}\n              <span\n                class={\n                  row[1] >= 100 ? 'rows__check rows__success' : 'rows__check'\n                }\n              >\n                âœ“\n              </span>\n            </div>\n          </div>\n        )\n      })}\n    </div>\n  )\n}\n\nProgress.propTypes = {\n  data: PropTypes.string.isRequired, // \"LBL 000\"\n  goal: PropTypes.number,\n}\n\nProgress.defaultProps = {\n  goal: 100,\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport classnames from 'classNames'\n\nimport './cal-chart.component.scss'\n\nexport default function Runs({ data }) {\n  return (\n    <div className=\"calchart\">\n      {console.log(data)}\n      {data.map(({ month, days }) => (\n        <div className=\"calchart__month\">\n          {month && <div className=\"calchart__month-name\">{month}</div>}\n          <div>\n            {days.map((week, indexWeek) => (\n              <div className=\"calchart__week\">\n                {week.map((day, indexDay) => (\n                  <div\n                    key={`${indexWeek}${indexDay}`}\n                    className={classnames(\n                      'calchart__day',\n                      { 'calchart__day--no': day === 0 },\n                      { 'calchart__day--yes': day === 1 },\n                      { 'calchart__day--null': day === 2 }\n                    )}\n                  />\n                ))}\n              </div>\n            ))}\n          </div>\n        </div>\n      ))}\n    </div>\n  )\n}\n\nRuns.propTypes = {\n  data: PropTypes.arrayOf(\n    PropTypes.shape({\n      month: PropTypes.string,\n      days: PropTypes.arrayOf(PropTypes.number),\n    })\n  ).isRequired,\n}\n\nRuns.defaultProps = {\n  className: '',\n}\n","import React from 'react'\nimport SEO from '../components/seo'\nimport ProgressChart from '../components/progress-chart/progress-chart.component'\nimport CalChart from '../components/cal-chart/cal-chart.component'\nimport ListItem from '../components/list-item/list-item.component'\n\nconst Goals2019Page = ({ data }) => (\n  <>\n    <SEO title=\"Goals 2019\" />\n    {console.log(data)}\n    <div style={{ maxWidth: '624px', margin: '0 auto' }}>\n      <h1>2019</h1>\n\n      <h2>Run 1200 miles this year</h2>\n      <ProgressChart\n        data={data.allJsonJson.edges[0].node.totalMilage.data}\n        goal={1200}\n      />\n\n      <br />\n\n      <h2>Run 100 miles per month</h2>\n      <ProgressChart data={data.allJsonJson.edges[0].node.runs.data} />\n\n      <br />\n\n      <h2>X-Train 4 days a week</h2>\n      <CalChart data={data.allJsonJson.edges[0].node.xtrain.data} />\n\n      <br />\n\n      <h2>Publish 1 new blog post a month</h2>\n      <div className=\"calchart__month-name\">JAN</div>\n      <ul style={{ marginLeft: 0 }}>\n        <ListItem\n          path=\"/190108/the-druid-and-the-squirrel/\"\n          title=\"The Druid And The Squirrel\"\n        />\n        <ListItem\n          path=\"/190101/new-look-same-great-taste/\"\n          title=\"New Look, Same Great Taste!\"\n        />\n      </ul>\n\n      <h2>Days Sober</h2>\n      <CalChart data={data.allJsonJson.edges[0].node.sober.data} />\n    </div>\n  </>\n)\n\nexport default Goals2019Page\n\nexport const pageQuery = graphql`\n  query goals2019 {\n    allJsonJson {\n      edges {\n        node {\n          totalMilage {\n            data\n          }\n          runs {\n            data\n            meta {\n              comments\n            }\n          }\n          xtrain {\n            data {\n              month\n              days\n            }\n            meta {\n              comments\n            }\n          }\n          sober {\n            data {\n              month\n              days\n            }\n          }\n        }\n      }\n    }\n  }\n`\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\nconst titleTemplate = (title, siteTitle) => {\n  if (title === siteTitle) {\n    return title\n  }\n\n  return `%s Â· ${siteTitle}`\n}\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaDescription =\n          description || data.site.siteMetadata.description\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang,\n            }}\n            link={[\n              {\n                rel: 'stylesheet',\n                href:\n                  'https://fonts.googleapis.com/css?family=Karla:400,400i,700,700i',\n              },\n              {\n                rel: 'stylesheet',\n                href: 'https://fonts.googleapis.com/css?family=Inconsolata',\n              },\n            ]}\n            title={title}\n            titleTemplate={titleTemplate(title, data.site.siteMetadata.title)}\n            meta={[\n              {\n                name: `description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:title`,\n                content: title,\n              },\n              {\n                property: `og:description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:type`,\n                content: `website`,\n              },\n              {\n                name: `twitter:card`,\n                content: `summary`,\n              },\n              {\n                name: `twitter:creator`,\n                content: data.site.siteMetadata.author,\n              },\n              {\n                name: `twitter:title`,\n                content: title,\n              },\n              {\n                name: `twitter:description`,\n                content: metaDescription,\n              },\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                      name: `keywords`,\n                      content: keywords.join(`, `),\n                    }\n                  : []\n              )\n              .concat(meta)}\n          />\n        )\n      }}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Link } from 'gatsby'\nimport { OutboundLink } from 'gatsby-plugin-google-analytics'\n\nimport './list-item.component.scss'\n\nexport default function ListItem({ className, date, path, title, external }) {\n  const classes = date\n    ? `list-item list-item--with-date ${className}`\n    : `list-item ${className}`\n  const linkToRender = external ? (\n    <OutboundLink className=\"list-item__link\" href={path}>\n      {title}\n    </OutboundLink>\n  ) : (\n    <Link className=\"list-item__link\" to={path}>\n      {title}\n    </Link>\n  )\n\n  return (\n    <li key={`${date}-${title}`} className={classes}>\n      {date && <span className=\"list-item__date extrnal\">{date}</span>}\n      {linkToRender}\n    </li>\n  )\n}\n\nListItem.propTypes = {\n  className: PropTypes.string,\n}\n\nListItem.defaultProps = {\n  className: '',\n}\n","/*!\n  Copyright (c) 2017 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames () {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg) && arg.length) {\n\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\tif (inner) {\n\t\t\t\t\tclasses.push(inner);\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tfor (var key in arg) {\n\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n"],"sourceRoot":""}