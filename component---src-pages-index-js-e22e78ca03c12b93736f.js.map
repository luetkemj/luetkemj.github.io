{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./src/components/seo.js"],"names":["__webpack_require__","r","__webpack_exports__","d","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby__WEBPACK_IMPORTED_MODULE_1__","gatsby_plugin_google_analytics__WEBPACK_IMPORTED_MODULE_2__","_components_seo__WEBPACK_IMPORTED_MODULE_3__","lodash__WEBPACK_IMPORTED_MODULE_4__","lodash__WEBPACK_IMPORTED_MODULE_4___default","ListItem","_ref","date","path","title","classes","linkToRender","external","a","createElement","className","href","to","key","IndexPage","_ref2","_ref2$data","data","edges","allMarkdownRemark","site","siteMetadata","posts","filter","post","node","frontmatter","layout","categories","_","chain","map","p","uniq","value","postsByCategory","category","index","Fragment","fields","titleTemplate","siteTitle","SEO","description","lang","meta","keywords","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_4__","query","detailsQuery","render","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","link","rel","name","content","property","author","concat","length","join","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","defaultProps","propTypes","PropTypes","string","array","arrayOf","isRequired"],"mappings":"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","file":"component---src-pages-index-js-e22e78ca03c12b93736f.js","sourcesContent":["import React from 'react'\nimport { Link } from 'gatsby'\nimport { OutboundLink } from 'gatsby-plugin-google-analytics'\nimport SEO from '../components/seo'\nimport _ from 'lodash';\n\nimport './index.scss';\n\nconst ListItem = ({ date, path, title, external }) => {\n  const classes = date ? 'list-item list-item--with-date' : 'list-item';\n  const linkToRender = external ?\n    (<OutboundLink className=\"list-item__link\" href={path}>{title}</OutboundLink>) :\n    (<Link className=\"list-item__link\" to={path}>{title}</Link>);\n\n  return (\n    <li key={`${date}-${title}`} className={classes}>\n      {date && <span className=\"list-item__date extrnal\">{date}</span>}\n      {linkToRender}\n    </li>\n  )\n};\n\nconst IndexPage = ({ \n  data: { \n    allMarkdownRemark: { edges }, \n    site: {\n      siteMetadata: {\n        title\n      }\n    }\n  }\n}) => {\n  const posts = edges.filter(post => post.node.frontmatter.layout === 'post');\n  const categories = _.chain(posts).map(p => p.node.frontmatter.categories).uniq().value();\n  const postsByCategory = _.chain(categories).map(category => _.filter(posts, post => post.node.frontmatter.categories === category)).value()\n\n  return (\n    <div className=\"index\">\n      <SEO title={`${title}`}/>\n      <section>\n        {\n          postsByCategory.map((category, index) => (\n            <>\n              <h2 className=\"index__header\">{categories[index]}</h2>\n              <ul className=\"index__post-list\">\n                {category\n                  .map(post => (\n                    <ListItem\n                      key={post.node.fields.path}\n                      date={post.node.frontmatter.date}\n                      path={post.node.fields.path}\n                      title={post.node.frontmatter.title}\n                    />\n                  ))\n                }\n              </ul>    \n            </>\n          ))\n        }\n      </section>\n\n      <section>\n        <h2 className=\"index__header\">Comics</h2>\n        <ul className=\"index__post-list\">\n          <ListItem external path=\"http://www.webtoons.com/en/challenge/mallow-chalie/list?title_no=3458\" title=\"Mallow Chalie\" />\n          <ListItem path=\"/comics/strong-man\" title=\"Strong Man\" />\n          <ListItem external path=\"http://www.makingcomics.com/2014/01/18/get-started-already\" title=\"Get Started Already!\" />\n          <ListItem path=\"/comics/inner-dialogue\" title=\"Inner Dialogue\" />\n          <ListItem path=\"/comics/inner-dialogue-outtakes\" title=\"Inner Dialogue Outtakes\" />\n          <ListItem external path=\"http://www.makingcomics.com/2014/01/01/taste-vs-ability\" title=\"Taste VS Ability\" />\n          {/* <!-- 2816 monument -->\n          <!-- experimental sequential 2 --> */}\n          <ListItem path=\"/comics/robert\" title=\"Robert\" />\n          <ListItem external path=\"http://www.topshelfcomix.com/ts2.0/baby_dragons_ch1/\" title=\"Baby Dragons Are No Fun - Part 1\" />\n          <ListItem external path=\"http://www.topshelfcomix.com/ts2.0/baby_dragons_ch2/\" title=\"Baby Dragons Are No Fun - Part 2\" />\n          <ListItem path=\"/comics/rip-smokey-the-cat\" title=\"RIP Smokey the Cat\" />\n          <ListItem path=\"/comics/are-you-awake-bunny-rabbit\" title=\"Are You Awake Bunny Rabbit?\" />\n          <ListItem path=\"/comics/fiesta\" title=\"Fiesta\" />\n        </ul>\n      </section>\n    </div>\n  )\n}\n\nexport default IndexPage\n\nexport const pageQuery = graphql`\n  query IndexQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n    allMarkdownRemark(sort: { order: DESC, fields: [frontmatter___date] }) {\n      edges {\n        node {\n          fields {\n            path\n          }\n          frontmatter {\n            layout\n            title\n            date(formatString: \"YYMMDD\")\n            categories\n          }\n        }\n      }\n    }\n  }\n`;\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\nconst titleTemplate = (title, siteTitle) => {\n  if (title === siteTitle) {\n    return title;\n  }\n\n  return `%s Â· ${siteTitle}`;\n}\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaDescription =\n          description || data.site.siteMetadata.description\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang,\n            }}\n            link={[\n              { rel: 'stylesheet', href: 'https://fonts.googleapis.com/css?family=Karla:400,400i,700,700i' },\n              { rel: 'stylesheet', href: 'https://fonts.googleapis.com/css?family=Inconsolata' },\n            ]}\n            title={title}\n            titleTemplate={titleTemplate(title, data.site.siteMetadata.title)}\n            meta={[\n              {\n                name: `description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:title`,\n                content: title,\n              },\n              {\n                property: `og:description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:type`,\n                content: `website`,\n              },\n              {\n                name: `twitter:card`,\n                content: `summary`,\n              },\n              {\n                name: `twitter:creator`,\n                content: data.site.siteMetadata.author,\n              },\n              {\n                name: `twitter:title`,\n                content: title,\n              },\n              {\n                name: `twitter:description`,\n                content: metaDescription,\n              },\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                      name: `keywords`,\n                      content: keywords.join(`, `),\n                    }\n                  : []\n              )\n              .concat(meta)}\n          />\n        )\n      }}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`\n"],"sourceRoot":""}