{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./src/components/seo.js","webpack:///./src/components/list-item/list-item.component.js"],"names":["__webpack_require__","r","__webpack_exports__","d","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_seo__WEBPACK_IMPORTED_MODULE_1__","_components_list_item_list_item_component__WEBPACK_IMPORTED_MODULE_2__","lodash__WEBPACK_IMPORTED_MODULE_3__","lodash__WEBPACK_IMPORTED_MODULE_3___default","IndexPage","_ref","_ref$data","data","edges","allMarkdownRemark","title","site","siteMetadata","posts","filter","post","node","frontmatter","layout","categories","_","chain","map","p","uniq","value","postsByCategory","category","a","createElement","className","index","Fragment","key","fields","path","date","external","titleTemplate","siteTitle","SEO","description","lang","meta","keywords","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_4__","query","detailsQuery","render","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","link","rel","href","name","content","property","author","concat","length","join","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","defaultProps","propTypes","PropTypes","string","array","arrayOf","isRequired","ListItem","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_2__","gatsby_plugin_google_analytics__WEBPACK_IMPORTED_MODULE_3__","classes","linkToRender","to"],"mappings":"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","file":"component---src-pages-index-js-562bb862e808a5e886c5.js","sourcesContent":["import React from 'react'\nimport SEO from '../components/seo'\nimport ListItem from '../components/list-item/list-item.component'\nimport _ from 'lodash'\n\nimport './index.scss'\n\nconst IndexPage = ({\n  data: {\n    allMarkdownRemark: { edges },\n    site: {\n      siteMetadata: { title },\n    },\n  },\n}) => {\n  const posts = edges.filter(post => post.node.frontmatter.layout === 'post')\n  const categories = _.chain(posts)\n    .map(p => p.node.frontmatter.categories)\n    .uniq()\n    .value()\n  const postsByCategory = _.chain(categories)\n    .map(category =>\n      _.filter(posts, post => post.node.frontmatter.categories === category)\n    )\n    .value()\n\n  return (\n    <div className=\"index\">\n      <SEO title={`${title}`} />\n      <section>\n        {postsByCategory.map((category, index) => (\n          <>\n            <h2 className=\"index__header\">{categories[index]}</h2>\n            <ul className=\"index__post-list\">\n              {category.map(post => (\n                <ListItem\n                  key={post.node.fields.path}\n                  date={post.node.frontmatter.date}\n                  path={post.node.fields.path}\n                  title={post.node.frontmatter.title}\n                />\n              ))}\n            </ul>\n          </>\n        ))}\n      </section>\n\n      <section>\n        <h2 className=\"index__header\">Comics</h2>\n        <ul className=\"index__post-list\">\n          <ListItem\n            external\n            path=\"http://www.webtoons.com/en/challenge/mallow-chalie/list?title_no=3458\"\n            title=\"Mallow Chalie\"\n          />\n          <ListItem path=\"/comics/strong-man\" title=\"Strong Man\" />\n          <ListItem\n            external\n            path=\"http://www.makingcomics.com/2014/01/18/get-started-already\"\n            title=\"Get Started Already!\"\n          />\n          <ListItem path=\"/comics/inner-dialogue\" title=\"Inner Dialogue\" />\n          <ListItem\n            path=\"/comics/inner-dialogue-outtakes\"\n            title=\"Inner Dialogue Outtakes\"\n          />\n          <ListItem\n            external\n            path=\"http://www.makingcomics.com/2014/01/01/taste-vs-ability\"\n            title=\"Taste VS Ability\"\n          />\n          {/* <!-- 2816 monument -->\n          <!-- experimental sequential 2 --> */}\n          <ListItem path=\"/comics/robert\" title=\"Robert\" />\n          <ListItem\n            external\n            path=\"http://www.topshelfcomix.com/ts2.0/baby_dragons_ch1/\"\n            title=\"Baby Dragons Are No Fun - Part 1\"\n          />\n          <ListItem\n            external\n            path=\"http://www.topshelfcomix.com/ts2.0/baby_dragons_ch2/\"\n            title=\"Baby Dragons Are No Fun - Part 2\"\n          />\n          <ListItem\n            path=\"/comics/rip-smokey-the-cat\"\n            title=\"RIP Smokey the Cat\"\n          />\n          <ListItem\n            path=\"/comics/are-you-awake-bunny-rabbit\"\n            title=\"Are You Awake Bunny Rabbit?\"\n          />\n          <ListItem path=\"/comics/fiesta\" title=\"Fiesta\" />\n        </ul>\n      </section>\n    </div>\n  )\n}\n\nexport default IndexPage\n\nexport const pageQuery = graphql`\n  query IndexQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n    allMarkdownRemark(sort: { order: DESC, fields: [frontmatter___date] }) {\n      edges {\n        node {\n          fields {\n            path\n          }\n          frontmatter {\n            layout\n            title\n            date(formatString: \"YYMMDD\")\n            categories\n          }\n        }\n      }\n    }\n  }\n`\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\nconst titleTemplate = (title, siteTitle) => {\n  if (title === siteTitle) {\n    return title\n  }\n\n  return `%s Â· ${siteTitle}`\n}\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaDescription =\n          description || data.site.siteMetadata.description\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang,\n            }}\n            link={[\n              {\n                rel: 'stylesheet',\n                href:\n                  'https://fonts.googleapis.com/css?family=Karla:400,400i,700,700i',\n              },\n              {\n                rel: 'stylesheet',\n                href: 'https://fonts.googleapis.com/css?family=Inconsolata',\n              },\n            ]}\n            title={title}\n            titleTemplate={titleTemplate(title, data.site.siteMetadata.title)}\n            meta={[\n              {\n                name: `description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:title`,\n                content: title,\n              },\n              {\n                property: `og:description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:type`,\n                content: `website`,\n              },\n              {\n                name: `twitter:card`,\n                content: `summary`,\n              },\n              {\n                name: `twitter:creator`,\n                content: data.site.siteMetadata.author,\n              },\n              {\n                name: `twitter:title`,\n                content: title,\n              },\n              {\n                name: `twitter:description`,\n                content: metaDescription,\n              },\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                      name: `keywords`,\n                      content: keywords.join(`, `),\n                    }\n                  : []\n              )\n              .concat(meta)}\n          />\n        )\n      }}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Link } from 'gatsby'\nimport { OutboundLink } from 'gatsby-plugin-google-analytics'\n\nimport './list-item.component.scss'\n\nexport default function ListItem({ className, date, path, title, external }) {\n  const classes = date\n    ? `list-item list-item--with-date ${className}`\n    : `list-item ${className}`\n  const linkToRender = external ? (\n    <OutboundLink className=\"list-item__link\" href={path}>\n      {title}\n    </OutboundLink>\n  ) : (\n    <Link className=\"list-item__link\" to={path}>\n      {title}\n    </Link>\n  )\n\n  return (\n    <li key={`${date}-${title}`} className={classes}>\n      {date && <span className=\"list-item__date extrnal\">{date}</span>}\n      {linkToRender}\n    </li>\n  )\n}\n\nListItem.propTypes = {\n  className: PropTypes.string,\n}\n\nListItem.defaultProps = {\n  className: '',\n}\n"],"sourceRoot":""}