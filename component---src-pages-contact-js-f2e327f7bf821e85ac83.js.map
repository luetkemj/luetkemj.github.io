{"version":3,"sources":["webpack:///./src/pages/contact.js","webpack:///./src/components/seo.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_seo__WEBPACK_IMPORTED_MODULE_1__","ContactPage","a","createElement","Fragment","title","style","maxWidth","margin","role","aria-label","titleTemplate","siteTitle","SEO","_ref","description","lang","meta","keywords","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_4__","query","detailsQuery","render","data","metaDescription","site","siteMetadata","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","link","rel","href","name","content","property","author","concat","length","join","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","defaultProps","propTypes","PropTypes","string","array","arrayOf","isRequired"],"mappings":"0FAAAA,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,EAAA,GAAAI,EAAAJ,EAAAK,EAAAF,GAAAG,EAAAN,EAAA,KAaeO,UAVK,kBAClBH,EAAAI,EAAAC,cAAAL,EAAAI,EAAAE,SAAA,KACEN,EAAAI,EAAAC,cAACH,EAAA,EAAD,CAAKK,MAAM,UACXP,EAAAI,EAAAC,cAAA,OAAKG,MAAO,CAAEC,SAAU,QAASC,OAAQ,WACvCV,EAAAI,EAAAC,cAAA,qBACAL,EAAAI,EAAAC,cAAA,+BAAsBL,EAAAI,EAAAC,cAAA,QAAMM,KAAK,MAAMC,aAAW,gBAA5B,iHCHtBC,EAAgB,SAACN,EAAOO,GAC5B,OAAIP,IAAUO,EACLP,EAGT,QAAeO,GAGjB,SAASC,EAATC,GAA2D,IAA5CC,EAA4CD,EAA5CC,YAAaC,EAA+BF,EAA/BE,KAAMC,EAAyBH,EAAzBG,KAAMC,EAAmBJ,EAAnBI,SAAUb,EAASS,EAATT,MAChD,OACEc,EAAAjB,EAAAC,cAACiB,EAAA,YAAD,CACEC,MAAOC,EACPC,OAAQ,SAAAC,GACN,IAAMC,EACJV,GAAeS,EAAKE,KAAKC,aAAaZ,YACxC,OACEI,EAAAjB,EAAAC,cAACyB,EAAA1B,EAAD,CACE2B,eAAgB,CACdb,QAEFc,KAAM,CACJ,CAAEC,IAAK,aAAcC,KAAM,mEAC3B,CAAED,IAAK,aAAcC,KAAM,wDAE7B3B,MAAOA,EACPM,cAAeA,EAAcN,EAAOmB,EAAKE,KAAKC,aAAatB,OAC3DY,KAAM,CACJ,CACEgB,KAAI,cACJC,QAAST,GAEX,CACEU,SAAQ,WACRD,QAAS7B,GAEX,CACE8B,SAAQ,iBACRD,QAAST,GAEX,CACEU,SAAQ,UACRD,QAAO,WAET,CACED,KAAI,eACJC,QAAO,WAET,CACED,KAAI,kBACJC,QAASV,EAAKE,KAAKC,aAAaS,QAElC,CACEH,KAAI,gBACJC,QAAS7B,GAEX,CACE4B,KAAI,sBACJC,QAAST,IAGVY,OACCnB,EAASoB,OAAS,EACd,CACEL,KAAI,WACJC,QAAShB,EAASqB,KAAT,OAEX,IAELF,OAAOpB,MA1DlBO,KAAAgB,IAkEJ3B,EAAI4B,aAAe,CACjBzB,KAAI,KACJC,KAAM,GACNC,SAAU,IAGZL,EAAI6B,UAAY,CACd3B,YAAa4B,IAAUC,OACvB5B,KAAM2B,IAAUC,OAChB3B,KAAM0B,IAAUE,MAChB3B,SAAUyB,IAAUG,QAAQH,IAAUC,QACtCvC,MAAOsC,IAAUC,OAAOG,YAGXlC,MAEf,IAAMS,EAAY","file":"component---src-pages-contact-js-f2e327f7bf821e85ac83.js","sourcesContent":["import React from 'react'\nimport SEO from '../components/seo'\n\nconst ContactPage = () => (\n  <>\n    <SEO title=\"About\"/>\n    <div style={{ maxWidth: '592px', margin: '0 auto'}}>\n      <h1>Contact</h1>\n      <p>luetkemj@gmail.com <span role=\"img\" aria-label=\"Writing Hand\">✍</span></p>\n    </div>\n  </>\n)\n\nexport default ContactPage\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\nconst titleTemplate = (title, siteTitle) => {\n  if (title === siteTitle) {\n    return title;\n  }\n\n  return `%s · ${siteTitle}`;\n}\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaDescription =\n          description || data.site.siteMetadata.description\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang,\n            }}\n            link={[\n              { rel: 'stylesheet', href: 'https://fonts.googleapis.com/css?family=Karla:400,400i,700,700i' },\n              { rel: 'stylesheet', href: 'https://fonts.googleapis.com/css?family=Inconsolata' },\n            ]}\n            title={title}\n            titleTemplate={titleTemplate(title, data.site.siteMetadata.title)}\n            meta={[\n              {\n                name: `description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:title`,\n                content: title,\n              },\n              {\n                property: `og:description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:type`,\n                content: `website`,\n              },\n              {\n                name: `twitter:card`,\n                content: `summary`,\n              },\n              {\n                name: `twitter:creator`,\n                content: data.site.siteMetadata.author,\n              },\n              {\n                name: `twitter:title`,\n                content: title,\n              },\n              {\n                name: `twitter:description`,\n                content: metaDescription,\n              },\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                      name: `keywords`,\n                      content: keywords.join(`, `),\n                    }\n                  : []\n              )\n              .concat(meta)}\n          />\n        )\n      }}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`\n"],"sourceRoot":""}