{"componentChunkName":"component---src-templates-blog-template-js","path":"/180505/netlify-lambdas-as-simple-as-possible","result":{"data":{"site":{"siteMetadata":{"title":"luetkemj","description":"Change Is Good","author":"mark luetke"}},"markdownRemark":{"excerpt":"I could wax poetic about the wonder that is Netlify or I could get to the point. Let's get to the point. Netlify does a wonderful job of…","html":"<p>I could wax poetic about the wonder that is <a href=\"https://www.netlify.com/\">Netlify</a> or I could get to the point.</p>\n<p>Let's get to the point.</p>\n<p>Netlify does a wonderful job of running your build script and deploying your site. So good in fact it is difficult at times to know where Netlify's magic begins and ends. While messing around with Lambda functions on Netlify I found myself struggling to get a successful build going. With so much of the process abstracted away I found it difficult to modify my approach in any meaningful way.</p>\n<p>Why was I having problems? Was my build script configuration buggered up? Were the settings on my Netlify account borked? Did I write my .toml file correctly? When exactly does Netlify deploy my functions and where exactly is it looking for them? Does it build them? Do I build them? Do I have to use their <a href=\"https://www.npmjs.com/package/netlify-lambda\">build tool?</a></p>\n<p>In the end I found that the best approach to take in order to grok things was a simple one.</p>\n<p>As simple as possible.</p>\n<p>This is not a complex tutorial. This is also not a tutorial aimed at beginners. It is simply an attempt to strip away all the complexities of modern web development in a concerted effort to focus on the singular problem at hand — understanding how Netlify deploys Lambda functions.</p>\n<p>What follows is the most minimal approach to successfully deploy an AWS Lambda on Netlify I could come up with.</p>\n<h3>UPDATE 180509</h3>\n<p>Project structure and build step has been updated in response to Phil Hawksworth's comment below. While everything worked as initially structured it is bad practice to put your production ready lambdas in your publish folder. Once you start making API calls to protected services that require secrets you are opening  up security holes by publishing your lambdas (and potentially secrets) client side.</p>\n<p>Thanks for the catch Phil!</p>\n<p><a href=\"https://github.com/luetkemj/test-netlify-lambdas/tree/simple\">Skip to the code on github.</a></p>\n<h3>Setting up the project</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\"># create a directory structure for our project\nmkdir -p simple-lambdas/src/functions\n\n# navigate to our new project\ncd simple-lambdas\n\n# create a package.json file with npm - just accept all the defaults.\nnpm init</code></pre></div>\n<p>Your project structure should look like this:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">simple-lambdas\n  - package.json\n  - src\n    - functions</code></pre></div>\n<h3>A simple function</h3>\n<p>Netlify does a <a href=\"https://www.netlify.com/docs/functions/#javascript-lambda-functions\">good job of explaining</a> how a Lambda function should be structured.</p>\n<p>Create a file in <code class=\"language-text\">src/functions</code> named <code class=\"language-text\">hello.js</code> and paste Netlify's simple example function into it:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">exports.handler = function(event, context, callback) {\n  callback(null, {\n    statusCode: 200,\n    body: \"Hello, World\"\n  });\n}</code></pre></div>\n<p>Netlify deploys your Lambda functions <em>AFTER</em> the build step.</p>\n<p><em>You must have a build step</em>.</p>\n<p>Build steps can get complicated real fast with things like webpack, babel, etc. So we'll sort of fake it by copying our functions dir from <code class=\"language-text\">./src</code> to our project root at <code class=\"language-text\">./functions</code> and making an empty <code class=\"language-text\">./dist</code> dir we can point netlify at for our publish folder.</p>\n<p>Add this script to your package.json:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">\"build\": \"rm -rf dist &amp;&amp; rm -rf functions &amp;&amp; cp -r src/functions functions &amp;&amp; mkdir dist\"</code></pre></div>\n<p>Your package.json should now look like this:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">{\n  \"name\": \"simple-lambdas\",\n  \"version\": \"1.0.0\",\n  \"description\": \"\",\n  \"main\": \"index.js\",\n  \"scripts\": {\n    \"build\": \"rm -rf dist &amp;&amp; rm -rf functions &amp;&amp; cp -r src/functions functions &amp;&amp; mkdir dist\"\n  },\n  \"author\": \"\",\n  \"license\": \"ISC\"\n}</code></pre></div>\n<p><code class=\"language-text\">npm run build</code> will delete <code class=\"language-text\">./dist</code> and <code class=\"language-text\">./functions</code> if they already exist, make a copy of <code class=\"language-text\">./src/functions</code> to <code class=\"language-text\">./functions</code> and make a new empty dir at <code class=\"language-text\">./dist</code>.</p>\n<p>Finally, we need to tell Netlify how our project is structured. This can be done from their web interface but in this tutorial we will create a special settings file that will override those settings.</p>\n<p>Create a file called <code class=\"language-text\">netlify.toml</code> in the root of your project with the following contents:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">[build]\n  command = \"npm run build\" # your build command\n  publish = \"./dist\" # where your production ready code lives AFTER your build command has run\n  functions = \"./functions\" # where your production ready lambda functions live AFTER your build command has run</code></pre></div>\n<p>Every root file in <code class=\"language-text\">./functions</code> will become an endpoint with the following structure:</p>\n<p><code class=\"language-text\">{your-site-root}/.netlify/functions/{filename}</code></p>\n<p>to see it in action deploy the project to Netlify and navigate to:</p>\n<p><code class=\"language-text\">{your-site-root}/.netlify/functions/hello</code></p>\n<p>In the end Netlify does surprising little with your project. It runs the build command you tell it to, publishes the production code from the directory you tell it to, and packages and deploys functions from the directory you tell it to. What happens in your build step is entirely up to <strong>you</strong>. Where you put your production ready code and Lambda functions is entirely up to <strong>you</strong>.</p>\n<p>With this simple understanding, complexity may flourish.</p>","frontmatter":{"date":"180505","title":"Netlify Lambdas - As Simple As Possible","illustration":null,"layout":"post"}},"allFile":{"edges":[{"node":{"relativePath":"CA-191117-how-to-make-a-roguelike.png","publicURL":"/static/8ac6b5eb72dc309e8ed002abc5babc91/CA-191117-how-to-make-a-roguelike.png"}},{"node":{"relativePath":"CA-191117-rltut.png","publicURL":"/static/ded16b0723e9b5d6e17f0cdaaa4f8f4f/CA-191117-rltut.png"}},{"node":{"relativePath":"CA-191117-snerv.png","publicURL":"/static/653428e39f54328fd5fda9da4a58dc0d/CA-191117-snerv.png"}},{"node":{"relativePath":"dev-weekly-211101-2.png","publicURL":"/static/3bd3fa15eb43f2a3a5f8f804d27b63f6/dev-weekly-211101-2.png"}},{"node":{"relativePath":"dev-weekly-211101-3.png","publicURL":"/static/d1a64086de0f6248895d76b977650d51/dev-weekly-211101-3.png"}},{"node":{"relativePath":"dev-weekly-211101-4.png","publicURL":"/static/28b328ff72b359981407d3d1f328bb11/dev-weekly-211101-4.png"}},{"node":{"relativePath":"dev-weekly-211109-2.png","publicURL":"/static/27f23bb01b9e41d140787314c167e206/dev-weekly-211109-2.png"}},{"node":{"relativePath":"dev-weekly-211109-3.png","publicURL":"/static/610702bc5f2879de2fcfb613ed62080a/dev-weekly-211109-3.png"}},{"node":{"relativePath":"dev-weekly-220207-2.png","publicURL":"/static/dbce465a90d1e217466ace420a420392/dev-weekly-220207-2.png"}},{"node":{"relativePath":"dev-weekly-220207-7.png","publicURL":"/static/2d0670c857aaa080550c78cb275fb8fb/dev-weekly-220207-7.png"}},{"node":{"relativePath":"forest-gump.jpg","publicURL":"/static/cb60a493d812bb1e574418382f053dce/forest-gump.jpg"}},{"node":{"relativePath":"CA-190805-ball-bouncing.gif","publicURL":"/static/08773357003ecdc0ca6243769528e2c1/CA-190805-ball-bouncing.gif"}},{"node":{"relativePath":"CA-190814-old-horse-thief.jpg","publicURL":"/static/bc1775f77b23d060fa622f87468886c1/CA-190814-old-horse-thief.jpg"}},{"node":{"relativePath":"dev-weekly-220207-1.png","publicURL":"/static/97e8ea559598f9e4cbde49b5a43cd560/dev-weekly-220207-1.png"}},{"node":{"relativePath":"dev-weekly-220207-5.png","publicURL":"/static/013bdc436a7ecd2fcf75ae5e4259b725/dev-weekly-220207-5.png"}},{"node":{"relativePath":"dev-weekly-220207-4.png","publicURL":"/static/f6d34625d2649cd55d2c907e2a0cdc70/dev-weekly-220207-4.png"}},{"node":{"relativePath":"luetkemj.png","publicURL":"/static/1831991e0e0c9cc03aa10eca078afa54/luetkemj.png"}},{"node":{"relativePath":"neistat.png","publicURL":"/static/ef667e42ff76189bfb9374db77d8a5f3/neistat.png"}},{"node":{"relativePath":"unstuck1-6.jpg","publicURL":"/static/3d35c1d5b4e52f6f60b3a74cbe16dfc5/unstuck1-6.jpg"}},{"node":{"relativePath":"dev-weekly-220207-3.png","publicURL":"/static/34878d17a3341f9d5402d8656f2dc7b7/dev-weekly-220207-3.png"}},{"node":{"relativePath":"unstuck1-13.jpg","publicURL":"/static/9fce5365c83e38b7ba59ab5c89a17d0b/unstuck1-13.jpg"}},{"node":{"relativePath":"CA-190805-PO5.png","publicURL":"/static/8f4d2c8fdad23dd34a37a5a78ead1ad1/CA-190805-PO5.png"}},{"node":{"relativePath":"CA-191117-snail2.png","publicURL":"/static/e0c8b4f93b470dd33861498f8d5c1b04/CA-191117-snail2.png"}},{"node":{"relativePath":"dev-weekly-2-mapgen.png","publicURL":"/static/16a8266115eebfdf185effcae05a83a8/dev-weekly-2-mapgen.png"}},{"node":{"relativePath":"unstuck1-2.jpg","publicURL":"/static/c71a5d5130ff6ef004fb555dbde95f25/unstuck1-2.jpg"}},{"node":{"relativePath":"unstuck1-5.jpg","publicURL":"/static/ddd6f590be60c0392b239a7239f85e7e/unstuck1-5.jpg"}},{"node":{"relativePath":"CA-190805-ball-spinning.gif","publicURL":"/static/584cbc3260dd8d37d2dc4d57d4fe15ea/CA-190805-ball-spinning.gif"}},{"node":{"relativePath":"CA-190805-walks.gif","publicURL":"/static/b81a25df3b9c73ec6bb0a083f0d940c2/CA-190805-walks.gif"}},{"node":{"relativePath":"dev-weekly-211101-1.png","publicURL":"/static/3b1184da3d9138a256a277090492d0c9/dev-weekly-211101-1.png"}},{"node":{"relativePath":"dev-weekly-screenshot.png","publicURL":"/static/80b1b21df510b075a8ac68d78f0fb60e/dev-weekly-screenshot.png"}},{"node":{"relativePath":"unstuck1-1.jpg","publicURL":"/static/14e04cc27e2344d8ddcb96b06e6d7b82/unstuck1-1.jpg"}},{"node":{"relativePath":"unstuck1-12.jpg","publicURL":"/static/5d6578f2bb3cec3e1dce77a19a8b0b62/unstuck1-12.jpg"}},{"node":{"relativePath":"unstuck1-3.jpg","publicURL":"/static/3e0e741918140357ce0b1dc4ee32474d/unstuck1-3.jpg"}},{"node":{"relativePath":"unstuck1-4.jpg","publicURL":"/static/e5228d96a6abe34cdc2a91dbd108756b/unstuck1-4.jpg"}},{"node":{"relativePath":"dev-weekly-211109-1.png","publicURL":"/static/faa26502103a254b09df41b9c5b0bfd5/dev-weekly-211109-1.png"}},{"node":{"relativePath":"dev-weekly-pixitest-screenshot.png","publicURL":"/static/10696367de8e0def8f39b651ed0213ec/dev-weekly-pixitest-screenshot.png"}},{"node":{"relativePath":"CA-190805-double-take.gif","publicURL":"/static/7c966447b035acc49491fbdcdb6a30b4/CA-190805-double-take.gif"}},{"node":{"relativePath":"dev-weekly-220207-6.png","publicURL":"/static/bb584510a67241cf7b014ad2435a527d/dev-weekly-220207-6.png"}},{"node":{"relativePath":"CA-191117-snail.png","publicURL":"/static/a46b03fed45b55d545309a400d9f0d10/CA-191117-snail.png"}},{"node":{"relativePath":"dev-weekly-2-ui.png","publicURL":"/static/bff00a9be84f8544663f363ddbc0ad7a/dev-weekly-2-ui.png"}},{"node":{"relativePath":"220919/oncourse.jpeg","publicURL":"/static/9f53dc8c1f7c3829f29ed0ed0e231e0d/oncourse.jpeg"}},{"node":{"relativePath":"220919/wrecked.jpg","publicURL":"/static/6a80fea944b989a23ff5be9610be0487/wrecked.jpg"}},{"node":{"relativePath":"duthaldumat.png","publicURL":"/static/fe82691d77a7cf0aecf4909b70aa1fa1/duthaldumat.png"}},{"node":{"relativePath":"CA-190902-aglet.png","publicURL":"/static/95fc03afbf4429a0ca2ebba900ee8759/CA-190902-aglet.png"}},{"node":{"relativePath":"220919/sunrisetruck.jpeg","publicURL":"/static/9431d1f0a76aeecbe6c35a682ddac858/sunrisetruck.jpeg"}},{"node":{"relativePath":"unstuck1-7.jpeg","publicURL":"/static/573f1f8f23c2c9d3d727967095c038f5/unstuck1-7.jpeg"}},{"node":{"relativePath":"txbmf/moon.jpeg","publicURL":"/static/214dd7264b967a8a8ff3b0426ec329d6/moon.jpeg"}},{"node":{"relativePath":"txbmf/ranch.jpeg","publicURL":"/static/1774f9c4db5e44f777127e1d7f8a8cbb/ranch.jpeg"}},{"node":{"relativePath":"unstuck1-10.jpeg","publicURL":"/static/76b7e6142eeedafc69b4ad1e33f67bfa/unstuck1-10.jpeg"}},{"node":{"relativePath":"unstuck1-9.jpeg","publicURL":"/static/bbc2519a5acd4cc1c23915ae142ad501/unstuck1-9.jpeg"}},{"node":{"relativePath":"txbmf/sun.jpeg","publicURL":"/static/53bd521bf4b4de408f771cd2c5ab0351/sun.jpeg"}},{"node":{"relativePath":"txbmf/before.jpeg","publicURL":"/static/9c20be1f453c6a19618c54ae132c4e39/before.jpeg"}},{"node":{"relativePath":"unstuck1-8.jpeg","publicURL":"/static/eecf5c4744d7323687815228a14f7933/unstuck1-8.jpeg"}},{"node":{"relativePath":"txbmf/medal.jpeg","publicURL":"/static/558759b0a93c2935652a5e5a73828413/medal.jpeg"}},{"node":{"relativePath":"220919/cows.png","publicURL":"/static/2fb05514836795d5c13f76f969299f2c/cows.png"}},{"node":{"relativePath":"txbmf/salt.jpeg","publicURL":"/static/a043470b5343fea5e16ff29c1c81f98c/salt.jpeg"}},{"node":{"relativePath":"220919/climbing.jpeg","publicURL":"/static/45d02ce7f24f8476ae0308819fc6a62d/climbing.jpeg"}},{"node":{"relativePath":"CA-190722-cerebral-flab.png","publicURL":"/static/00a3862364464b2078d0f518fd91e8b9/CA-190722-cerebral-flab.png"}},{"node":{"relativePath":"txbmf/kittybunn.jpeg","publicURL":"/static/cc8774287b1628560ba1a3e704dfcb44/kittybunn.jpeg"}},{"node":{"relativePath":"txbmf/7il.png","publicURL":"/static/5c01f3fd78c3da4465390bbc9c14d4e2/7il.png"}},{"node":{"relativePath":"CA-191117-pcgdgns3.gif","publicURL":"/static/c9e6f7584599b5587a82d55e3cdc6c91/CA-191117-pcgdgns3.gif"}},{"node":{"relativePath":"220919/finishedjam.png","publicURL":"/static/4546890f91aea88079788ac13895932e/finishedjam.png"}},{"node":{"relativePath":"220919/sticker.jpeg","publicURL":"/static/67cd8e8decf79f21c15dbf49426cd318/sticker.jpeg"}}]},"nextPost":{"edges":[{"node":{"path":"/170902/experiencing-flow"}}]},"nextPostMarkdown":{"frontmatter":{"title":"Experiencing Flow"}},"previousPost":{"edges":[{"node":{"path":"/190101/new-look-same-great-taste"}}]},"previousPostMarkdown":{"frontmatter":{"title":"New Look, Same Great Taste!"}}},"pageContext":{"nextPostPath":"/170902/experiencing-flow","previousPostPath":"/190101/new-look-same-great-taste"}},"staticQueryHashes":["3128451518","3649515864"]}